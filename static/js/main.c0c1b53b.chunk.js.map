{"version":3,"sources":["components/Die/Die.js","components/Dice/Dice.js","components/RuleRow/RuleRow.js","utils/rules.js","components/ScoreTable/ScoreTable.js","components/Game/Game.js","App.js","index.js"],"names":["Die","handleClick","props","idx","this","numberWords","locked","val","disabled","rolling","classes","className","onClick","Component","defaultProps","Dice","dice","map","d","RuleRow","score","name","doScore","description","undefined","Rule","params","Object","assign","reduce","prev","curr","freqs","Map","set","get","Array","from","values","filter","length","TotalOneNumber","evalRoll","count","SumDistro","freq","some","c","sum","FullHouse","includes","SmallStraight","Set","has","LargeStraight","size","Yahtzee","ones","twos","threes","fours","fives","sixes","threeOfKind","fourOfKind","fullHouse","smallStraight","largeStraight","yahtzee","chance","ScoreTable","getTotalScore","scores","totalScore","key","cellSpacing","e","Game","animateRoll","setState","setTimeout","roll","st","i","Math","ceil","random","rollsLeft","fill","toggleLocked","state","slice","rulename","ruleFn","every","x","displayRollInfo","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0c1b53b.chunk.js","sourcesContent":["import { Component } from \"react\";\n\n/**\n * Imports Styling\n */\nimport \"./Die.css\";\n\n/**\n * Displays the component\n */\nclass Die extends Component {\n  /**\n   * Defines the default props\n   */\n  static defaultProps = {\n    numberWords: [\"one\", \"two\", \"three\", \"four\", \"five\", \"six\"],\n    val: 5\n  };\n\n  /**\n   * Handles locking die when clicked\n   */\n  handleClick = () => {\n    this.props.handleClick(this.props.idx);\n  };\n\n  render() {\n    const { numberWords, locked, val, disabled, rolling } = this.props;\n\n    /**\n     * Handles setting custom classes to the die\n     * based on the props\n     */\n    let classes = `Die fas fa-dice-${numberWords[val - 1]} fa-5x `;\n    if (locked) classes += \"Die-locked\";\n    if (rolling) classes += \"Die-rolling\";\n\n    return (\n      <i className={classes} onClick={this.handleClick} disabled={disabled} />\n    );\n  }\n}\n\nexport default Die;\n","import { Component } from \"react\";\n\n/**\n * Imports component\n */\nimport Die from \"../Die\";\n\n/**\n * Imports styling\n */\nimport \"./Dice.css\";\n\n/**\n * Displays the component\n */\nclass Dice extends Component {\n  render() {\n    return (\n      <div className=\"Dice\">\n        {this.props.dice.map((d, idx) => (\n          <Die\n            handleClick={this.props.handleClick}\n            val={d}\n            locked={this.props.locked[idx]}\n            idx={idx}\n            key={idx}\n            disabled={this.props.disabled}\n            rolling={this.props.rolling && !this.props.locked[idx]}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Dice;\n","import { Component } from \"react\";\n\n/**\n * Imports Styling\n */\nimport \"./RuleRow.css\";\n\n/**\n * Displays the component\n */\nclass RuleRow extends Component {\n  render() {\n    const { score, name, doScore, description } = this.props;\n    const disabled = score !== undefined;\n\n    return (\n      <tr\n        className={`RuleRow RuleRow-${disabled ? \"disabled\" : \"active\"}`}\n        onClick={disabled ? null : doScore}\n      >\n        <td className=\"RuleRow-name\">{name}</td>\n        <td className=\"RuleRow-score\">{disabled ? score : description}</td>\n      </tr>\n    );\n  }\n}\n\nexport default RuleRow;\n","/** Rule for Yahtzee scoring.\n *\n * This is an \"abstract class\"; the real rules are subclasses of these.\n * This stores all parameters passed into it as properties on the instance\n * (to simplify child classes so they don't need constructors of their own).\n *\n * It contains useful functions for summing, counting values, and counting\n * frequencies of dice. These are used by subclassed rules.\n */\n\nclass Rule {\n  constructor(params) {\n    /**\n     * Put all properties in params on instance\n     */\n    Object.assign(this, params);\n  }\n\n  sum(dice) {\n    /**\n     * Sum of all dice\n     */\n    return dice.reduce((prev, curr) => prev + curr);\n  }\n\n  freq(dice) {\n    /**\n     * Frequencies of dice values\n     */\n    const freqs = new Map();\n\n    for (let d of dice) freqs.set(d, (freqs.get(d) || 0) + 1);\n    return Array.from(freqs.values());\n  }\n\n  count(dice, val) {\n    /**\n     * # times val appears in dice\n     */\n    return dice.filter((d) => d === val).length;\n  }\n}\n\n/** Given a sought-for val, return sum of dice of that val.\n * Used for rules like \"sum of all ones\"\n */\nclass TotalOneNumber extends Rule {\n  evalRoll = (dice) => {\n    return this.val * this.count(dice, this.val);\n  };\n}\n\n/** Given a required # of same dice, return sum of all dice.\n * Used for rules like \"sum of all dice when there is a 3-of-kind\"\n */\nclass SumDistro extends Rule {\n  evalRoll = (dice) => {\n    /**\n     * Do any of the counts meet of exceed this distro?\n     */\n    return this.freq(dice).some((c) => c >= this.count) ? this.sum(dice) : 0;\n  };\n}\n\n/**\n * Check if full house (3-of-kind and 2-of-kind)\n */\nclass FullHouse extends Rule {\n  evalRoll = (dice) => {\n    const freqs = this.freq(dice);\n\n    return freqs.includes(2) && freqs.includes(3) ? this.score : 0;\n  };\n}\n\n/**\n * Checks for small straights\n */\nclass SmallStraight extends Rule {\n  evalRoll = (dice) => {\n    const d = new Set(dice);\n\n    /**\n     * Straight can be 234 + either 1 or 5\n     */\n    if (d.has(2) && d.has(3) && d.has(4) && (d.has(1) || d.has(5)))\n      return this.score;\n\n    /**\n     * Or 345 + either 2 or 6\n     */\n    if (d.has(3) && d.has(4) && d.has(5) && (d.has(2) || d.has(6)))\n      return this.score;\n\n    return 0;\n  };\n}\n\n/**\n * Checks for large straights\n */\nclass LargeStraight extends Rule {\n  evalRoll = (dice) => {\n    const d = new Set(dice);\n\n    /**\n     * Large straight must be 5 different dice & only one can be a 1 or a 6\n     */\n    return d.size === 5 && (!d.has(1) || !d.has(6)) ? this.score : 0;\n  };\n}\n\n/**\n * Check if all dice are same\n */\nclass Yahtzee extends Rule {\n  evalRoll = (dice) => {\n    return this.freq(dice)[0] === 5 ? this.score : 0;\n  };\n}\n\n/**\n * Ones, twos, etc score as sum of that value\n */\nexport const ones = new TotalOneNumber({\n  val: 1,\n  description: \"1 point per 1\"\n});\nexport const twos = new TotalOneNumber({\n  val: 2,\n  description: \"2 points per 2\"\n});\nexport const threes = new TotalOneNumber({\n  val: 3,\n  description: \"3 points per 3\"\n});\nexport const fours = new TotalOneNumber({\n  val: 4,\n  description: \"4 points per 4\"\n});\nexport const fives = new TotalOneNumber({\n  val: 5,\n  description: \"5 points per 5\"\n});\nexport const sixes = new TotalOneNumber({\n  val: 6,\n  description: \"6 points per 6\"\n});\n\n/**\n * Three / Four of kind score as sum of all dice\n */\nexport const threeOfKind = new SumDistro({\n  count: 3,\n  description: \"Sum all dice if 3 are the same\"\n});\n\nexport const fourOfKind = new SumDistro({\n  count: 4,\n  description: \"Sum all dice if 4 are the same\"\n});\n\n/**\n * Full house scores as flat 25\n */\nexport const fullHouse = new FullHouse({\n  score: 25,\n  description: \"25 points for a full house\"\n});\n\n/**\n * Small / Large straights score as 30/40\n */\nexport const smallStraight = new SmallStraight({\n  score: 30,\n  description: \"30 points for a small straight\"\n});\n\nexport const largeStraight = new LargeStraight({\n  score: 40,\n  description: \"40 points for a large straight\"\n});\n\n/**\n * Yahtzee scores as 50\n */\nexport const yahtzee = new Yahtzee({\n  score: 50,\n  description: \"50 points for yahtzee\"\n});\n\n/**\n * For chance, can view as some of all dice, requiring at least 0 of a kind\n */\nexport const chance = new SumDistro({\n  count: 0,\n  description: \"Sum of all dice\"\n});\n","import { Component } from \"react\";\n\n/**\n * Imports component\n */\nimport RuleRow from \"../RuleRow\";\n\n/**\n * Imports utils\n */\nimport {\n  ones,\n  twos,\n  threes,\n  fours,\n  fives,\n  sixes,\n  threeOfKind,\n  fourOfKind,\n  fullHouse,\n  smallStraight,\n  largeStraight,\n  yahtzee,\n  chance,\n} from \"../../utils\";\n\n/**\n * Imports styling\n */\nimport \"./ScoreTable.css\";\n\n/**\n * Displays the component\n */\nclass ScoreTable extends Component {\n  /**\n   * Handles getting the total score\n   */\n  getTotalScore = () => {\n    const { scores } = this.props;\n    let totalScore = 0;\n\n    for (let key in scores) {\n      if (scores[key]) totalScore += scores[key];\n    }\n    return totalScore;\n  };\n\n  render() {\n    const { scores, doScore } = this.props;\n\n    return (\n      <div className=\"ScoreTable\">\n        <section className=\"ScoreTable-section\">\n          <h2>Upper</h2>\n          <table cellSpacing=\"0\">\n            <tbody>\n              <RuleRow\n                name=\"Ones\"\n                score={scores.ones}\n                description={ones.description}\n                doScore={(e) => doScore(\"ones\", ones.evalRoll)}\n              />\n              <RuleRow\n                name=\"Twos\"\n                score={scores.twos}\n                description={twos.description}\n                doScore={(e) => doScore(\"twos\", twos.evalRoll)}\n              />\n              <RuleRow\n                name=\"Threes\"\n                score={scores.threes}\n                description={threes.description}\n                doScore={(e) => doScore(\"threes\", threes.evalRoll)}\n              />\n              <RuleRow\n                name=\"Fours\"\n                score={scores.fours}\n                description={fours.description}\n                doScore={(e) => doScore(\"fours\", fours.evalRoll)}\n              />\n              <RuleRow\n                name=\"Fives\"\n                score={scores.fives}\n                description={fives.description}\n                doScore={(e) => doScore(\"fives\", fives.evalRoll)}\n              />\n              <RuleRow\n                name=\"Sixes\"\n                score={scores.sixes}\n                description={sixes.description}\n                doScore={(e) => doScore(\"sixes\", sixes.evalRoll)}\n              />\n            </tbody>\n          </table>\n        </section>\n        <section className=\"ScoreTable-section ScoreTable-section-lower\">\n          <h2>Lower</h2>\n          <table cellSpacing=\"0\">\n            <tbody>\n              <RuleRow\n                name=\"Three of Kind\"\n                score={scores.threeOfKind}\n                description={threeOfKind.description}\n                doScore={(e) => doScore(\"threeOfKind\", threeOfKind.evalRoll)}\n              />\n              <RuleRow\n                name=\"Four of Kind\"\n                score={scores.fourOfKind}\n                description={fourOfKind.description}\n                doScore={(e) => doScore(\"fourOfKind\", fourOfKind.evalRoll)}\n              />\n              <RuleRow\n                name=\"Full House\"\n                score={scores.fullHouse}\n                description={fullHouse.description}\n                doScore={(e) => doScore(\"fullHouse\", fullHouse.evalRoll)}\n              />\n              <RuleRow\n                name=\"Small Straight\"\n                score={scores.smallStraight}\n                description={smallStraight.description}\n                doScore={(e) =>\n                  doScore(\"smallStraight\", smallStraight.evalRoll)\n                }\n              />\n              <RuleRow\n                name=\"Large Straight\"\n                score={scores.largeStraight}\n                description={largeStraight.description}\n                doScore={(e) =>\n                  doScore(\"largeStraight\", largeStraight.evalRoll)\n                }\n              />\n              <RuleRow\n                name=\"Yahtzee\"\n                score={scores.yahtzee}\n                description={yahtzee.description}\n                doScore={(e) => doScore(\"yahtzee\", yahtzee.evalRoll)}\n              />\n              <RuleRow\n                name=\"Chance\"\n                score={scores.chance}\n                description={chance.description}\n                doScore={(e) => doScore(\"chance\", chance.evalRoll)}\n              />\n            </tbody>\n          </table>\n        </section>\n        <h2>TOTAL SCORE: {this.getTotalScore()}</h2>\n      </div>\n    );\n  }\n}\n\nexport default ScoreTable;\n","import { Component } from \"react\";\n\n/**\n * Imports components\n */\nimport Dice from \"../Dice\";\nimport ScoreTable from \"../ScoreTable\";\n\n/**\n * Imports Styling\n */\nimport \"./Game.css\";\n\n/**\n * Defines the play style\n * Number of dice: n\n * Number of rolls: n\n */\nconst NUM_DICE = 5;\nconst NUM_ROLLS = 3;\n\n/**\n * Displays the component\n */\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dice: Array.from({ length: NUM_DICE }),\n      locked: Array(NUM_DICE).fill(false),\n      rollsLeft: NUM_ROLLS,\n      rolling: false,\n      scores: {\n        ones: undefined,\n        twos: undefined,\n        threes: undefined,\n        fours: undefined,\n        fives: undefined,\n        sixes: undefined,\n        threeOfKind: undefined,\n        fourOfKind: undefined,\n        fullHouse: undefined,\n        smallStraight: undefined,\n        largeStraight: undefined,\n        yahtzee: undefined,\n        chance: undefined\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.animateRoll();\n  }\n\n  /**\n   * Handles animating the dice when rolled\n   */\n  animateRoll = () => {\n    this.setState({ rolling: true }, () => {\n      setTimeout(this.roll, 1000);\n    });\n  };\n\n  /**\n   * Handles rolling the dice whose indexes are in reroll\n   */\n  roll = (e) => {\n    this.setState((st) => ({\n      dice: st.dice.map((d, i) =>\n        st.locked[i] ? d : Math.ceil(Math.random() * 6)\n      ),\n      locked: st.rollsLeft > 1 ? st.locked : Array(NUM_DICE).fill(true),\n      rollsLeft: st.rollsLeft - 1,\n      rolling: false\n    }));\n  };\n\n  /**\n   * Toggle whether idx is in locked or not\n   */\n  toggleLocked = (idx) => {\n    if (this.state.rollsLeft > 0 && !this.state.rolling) {\n      this.setState((st) => ({\n        locked: [\n          ...st.locked.slice(0, idx),\n          !st.locked[idx],\n          ...st.locked.slice(idx + 1)\n        ]\n      }));\n    }\n  };\n\n  /**\n   * Evaluates this ruleFn with the dice and score this rulename\n   */\n  doScore = (rulename, ruleFn) => {\n    this.setState((st) => ({\n      scores: { ...st.scores, [rulename]: ruleFn(this.state.dice) },\n      rollsLeft: NUM_ROLLS,\n      locked: Array(NUM_DICE).fill(false)\n    }));\n    this.animateRoll();\n  };\n\n  /**\n   * Handles displaying messages\n   */\n  displayRollInfo() {\n    const messages = [\n      \"0 Rolls Left\",\n      \"1 Roll Left\",\n      \"2 Rolls Left\",\n      \"Starting Round\"\n    ];\n    return messages[this.state.rollsLeft];\n  }\n\n  render() {\n    const { dice, locked, rollsLeft, rolling, scores } = this.state;\n\n    return (\n      <div className=\"Game\">\n        <header className=\"Game-header\">\n          <h1 className=\"App-title\">Yahtzee!</h1>\n          <section className=\"Game-dice-section\">\n            <Dice\n              dice={dice}\n              locked={locked}\n              handleClick={this.toggleLocked}\n              disabled={rollsLeft === 0}\n              rolling={rolling}\n            />\n            <div className=\"Game-button-wrapper\">\n              <button\n                className=\"Game-reroll\"\n                disabled={locked.every((x) => x) || rollsLeft === 0 || rolling}\n                onClick={this.animateRoll}\n              >\n                {this.displayRollInfo()}\n              </button>\n            </div>\n          </section>\n        </header>\n        <ScoreTable doScore={this.doScore} scores={scores} />\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import { Component } from \"react\";\n\n/**\n * Imports component\n */\nimport Game from \"../src/components/Game\";\n\n/**\n * Imports Styling\n */\nimport \"./App.css\";\n\n/**\n * Displays the component\n */\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Game />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\n\n/**\n * Imports the App\n */\nimport App from \"./App\";\n\n/**\n * Imports styling\n */\nimport \"./index.css\";\n\n/**\n * Renders the App\n */\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}